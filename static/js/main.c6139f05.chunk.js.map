{"version":3,"sources":["components/TimerControl.js","components/TimerDisplay.js","components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["TimerControl","state","idI","props","idD","id","this","onClick","e","incrementDecrementValues","idN","numberStart","Component","TimerDisplay","currentLabel","timeLabel","Clock","labelName","breakeValue","sessionValue","currentTimeMinuts","currentTimeSeconds","played","session","buttonPresed","tLabel","typebuttonPressed","split","updateClock","setState","typeCount","resetClock","clearInterval","playClock","setInterval","restValue","console","log","minuts","seconds","changeSession","Date","toLocaleString","stopClock","add","newMinut","style","display","justifyContent","backgroundColor","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6139f05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { BsFillCaretUpFill, BsFillCaretDownFill } from \"react-icons/bs\";\r\n\r\nimport \"../CssComponents/TimerControl.css\";\r\n\r\nexport default class TimerControl extends Component {\r\n  state = {\r\n    idI: this.props.idI,\r\n    idD: this.props.idD,\r\n  };\r\n  render() {\r\n    return (\r\n      <div id=\"card-controls-div\">\r\n        <h2 id={this.props.id}>{this.props.id}</h2>\r\n        <div id=\"controls\">\r\n          <BsFillCaretUpFill\r\n            id={this.props.idI}\r\n            onClick={(e) => this.props.incrementDecrementValues(this.state.idI)}\r\n          />\r\n          <p id={this.props.idN}>{this.props.numberStart}</p>\r\n          <BsFillCaretDownFill\r\n            id={this.props.idD}\r\n            onClick={(e) => this.props.incrementDecrementValues(this.state.idD)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../CssComponents/TimerDisplay.css\";\r\n\r\nexport default class TimerDisplay extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"display-card\">\r\n        <h1 id=\"timer-label\">{this.props.currentLabel}</h1>\r\n        <h1 id=\"time-left\">{this.props.timeLabel}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BsPlay, BsPause } from \"react-icons/bs\";\r\nimport { GrPowerReset } from \"react-icons/gr\";\r\n\r\nimport \"../CssComponents/Clock.css\";\r\n\r\nimport TimerControl from \"./TimerControl\";\r\nimport TimerDisplay from \"./TimerDisplay\";\r\n\r\nexport default class Clock extends Component {\r\n  state = {\r\n    labelName: \"Session\",\r\n    breakeValue: 5,\r\n    sessionValue: 25,\r\n    timeLabel: \"25:00\",\r\n    currentTimeMinuts: 25,\r\n    currentTimeSeconds: 0,\r\n    played: false,\r\n    session: true,\r\n  };\r\n\r\n  incrementDecrementValues = (buttonPresed) => {\r\n    let tLabel = \"\";\r\n    let typebuttonPressed = buttonPresed.split(\"-\");\r\n    if (!this.state.played) {\r\n      switch (buttonPresed) {\r\n        case \"break-increment\":\r\n          if (this.state.breakeValue < 60) {\r\n            tLabel = this.updateClock(true);\r\n            this.setState((state) => ({\r\n              breakeValue: state.breakeValue + 1,\r\n              currentTimeSeconds: 0,\r\n            }));\r\n          }\r\n          break;\r\n        case \"break-decrement\":\r\n          if (this.state.breakeValue > 0) {\r\n            tLabel = this.updateClock(false);\r\n            this.setState((state) => ({\r\n              breakeValue: state.breakeValue - 1,\r\n              currentTimeSeconds: 0,\r\n            }));\r\n          }\r\n          break;\r\n        case \"session-increment\":\r\n          if (this.state.sessionValue < 60) {\r\n            tLabel = this.updateClock(true);\r\n            this.setState((state) => ({\r\n              sessionValue: state.sessionValue + 1,\r\n              currentTimeSeconds: 0,\r\n            }));\r\n          }\r\n          break;\r\n        case \"session-decrement\":\r\n          tLabel = this.updateClock(false);\r\n          if (this.state.sessionValue > 0) {\r\n            this.setState((state) => ({\r\n              sessionValue: state.sessionValue - 1,\r\n              currentTimeSeconds: 0,\r\n            }));\r\n          }\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n      if (\r\n        (this.state.session && typebuttonPressed[0] === \"session\") ||\r\n        (!this.state.session && typebuttonPressed[0] === \"break\")\r\n      ) {\r\n        let typeCount = 0;\r\n        this.state.session\r\n          ? (typeCount = this.state.sessionValue)\r\n          : (typeCount = this.state.breakeValue);\r\n        if (typebuttonPressed[1] === \"increment\") {\r\n          if (this.state.currentTimeMinuts < 60) {\r\n            this.setState((state) => ({\r\n              currentTimeMinuts: typeCount + 1,\r\n              timeLabel: tLabel,\r\n            }));\r\n          }\r\n        } else {\r\n          if (this.state.currentTimeMinuts > 0) {\r\n            this.setState((state) => ({\r\n              currentTimeMinuts: typeCount + 1,\r\n              timeLabel: tLabel,\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  resetClock = () => {\r\n    clearInterval(this.id);\r\n    this.setState({\r\n      labelName: \"Session\",\r\n      breakeValue: 5,\r\n      sessionValue: 25,\r\n      timeLabel: \"25:00\",\r\n      currentTimeMinuts: 25,\r\n      currentTimeSeconds: 0,\r\n      played: false,\r\n      session: true,\r\n    });\r\n  };\r\n\r\n  playClock = () => {\r\n    this.setState({\r\n      played: true,\r\n    });\r\n    this.id = setInterval(this.restValue, 1000);\r\n  };\r\n\r\n  restValue = () => {\r\n    console.log(\"runing\");\r\n    let minuts = this.state.currentTimeMinuts;\r\n    let seconds = this.state.currentTimeSeconds;\r\n    let timeLabel = [];\r\n    seconds--;\r\n    if (seconds === -1) {\r\n      minuts--;\r\n      if (minuts === -1) {\r\n        this.changeSession();\r\n      } else {\r\n        seconds = 59;\r\n      }\r\n    }\r\n    if (seconds > -1 || minuts > -1) {\r\n      timeLabel = new Date(0, 0, 0, 0, minuts, seconds)\r\n        .toLocaleString()\r\n        .split(\":\");\r\n      this.setState({\r\n        currentTimeMinuts: minuts,\r\n        currentTimeSeconds: seconds,\r\n        timeLabel: `${timeLabel[1]}:${timeLabel[2]}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeSession = () => {\r\n    this.state.session\r\n      ? this.setState((state) => ({\r\n          labelName: \"Break\",\r\n          timeLabel: `${state.breakeValue}:00`,\r\n          currentTimeMinuts: state.breakeValue,\r\n          session: false,\r\n        }))\r\n      : this.setState((state) => ({\r\n          labelName: \"Session\",\r\n          timeLabel: `${state.sessionValue}:00`,\r\n          currentTimeMinuts: state.sessionValue,\r\n          session: true,\r\n        }));\r\n  };\r\n\r\n  stopClock = () => {\r\n    this.setState({\r\n      played: false,\r\n    });\r\n    clearInterval(this.id);\r\n  };\r\n\r\n  updateClock = (add) => {\r\n    let newMinut = 0;\r\n    this.state.session\r\n      ? (newMinut = this.state.sessionValue)\r\n      : (newMinut = this.state.breakeValue);\r\n    add ? newMinut++ : newMinut--;\r\n    let tLabel = new Date(0, 0, 0, 0, newMinut, 0).toLocaleString().split(\":\");\r\n    return `${tLabel[1]}:${tLabel[2]}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"clock\">\r\n        <h1 id=\"tittle\">Hola mundo</h1>\r\n        <div id=\"controls-div\">\r\n          <TimerControl\r\n            id=\"break-label\"\r\n            idI=\"break-increment\"\r\n            idD=\"break-decrement\"\r\n            idN=\"break-length\"\r\n            numberStart={this.state.breakeValue}\r\n            incrementDecrementValues={this.incrementDecrementValues}\r\n          />\r\n          <TimerControl\r\n            id=\"session-label\"\r\n            idI=\"session-increment\"\r\n            idD=\"session-decrement\"\r\n            idN=\"session-length\"\r\n            numberStart={this.state.sessionValue}\r\n            incrementDecrementValues={this.incrementDecrementValues}\r\n          />\r\n        </div>\r\n        <br />\r\n        <TimerDisplay\r\n          currentLabel={this.state.labelName}\r\n          timeLabel={this.state.timeLabel}\r\n          currentTimeMinuts={this.state.currentTimeMinuts}\r\n          currentTimeSeconds={this.state.currentTimeSeconds}\r\n        />\r\n        <br />\r\n        <div id=\"controls-play-div\">\r\n          {this.state.played ? (\r\n            <BsPause onClick={this.stopClock} />\r\n          ) : (\r\n            <BsPlay onClick={this.playClock} />\r\n          )}\r\n          <GrPowerReset onClick={this.resetClock} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\n\nimport Clock from \"./components/Clock\";\n\nconst style = {\n  display: \"flex\",\n  justifyContent: \"center\",\n  backgroundColor: \"green\",\n};\n\nfunction App() {\n  return (\n    <div className=\"App\" style={style}>\n      <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}